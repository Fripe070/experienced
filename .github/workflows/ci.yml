name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  DATABASE_URL: "mysql://root:root@localhost/experienced"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Start MySQL
        run: sudo /etc/init.d/mysql start

      - name: Create MySQL test database
        run: sudo mysql -e 'CREATE DATABASE experienced;' --user=root --password=root

      - name: Check out code into the proper directory
        uses: actions/checkout@v3

      - name: Run database migrations
        run: mysql --user=root --password=root < database.mysql

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt --check

      - name: Check build
        run: cargo clippy

      - name: Run tests
        run: cargo test

  deploy:
    runs-on: ubuntu-latest
    needs: check
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' && github.head_ref = 'main'
    strategy:
      fail-fast: true
      matrix:
        side: [listener, slash]
    steps:
      - name: Correct env
        run:
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Check out code into the proper directory
        uses: actions/checkout@v3

      - name: Start MySQL
        run: sudo /etc/init.d/mysql start

      - name: Create MySQL test database
        run: sudo mysql -e 'CREATE DATABASE experienced;' --user=root --password=root

      - name: Run database migrations
        run: mysql --user=root --password=root < database.mysql

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.side }}/
          push: true
          tags: ghcr.io/${{ env.REPO }}-${{ matrix.side }}:latest
          platforms: linux/amd64
          network: host
          build-args: |
            database_url=${{ env.DATABASE_URL }}

