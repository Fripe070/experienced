name: CI
on:
  push:
    branches:
      - prod
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  check:
    uses: ./.github/workflows/check.yml

  build:
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - docker: linux/amd64
            llvm: x86_64
          - docker: linux/arm64
            llvm: aarch64
        package:
          - image: ghcr.io/randomairborne/experienced
            name: xpd-gateway
          - image: ghcr.io/randomairborne/experienced-cleanup
            name: xpd-cleanup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ./${{ matrix.package.name }}/Dockerfile
          context: .
          platforms: ${{ matrix.platform.docker }}
          build-args: |
            LLVMTARGETARCH=${{ matrix.platform.llvm }}
          outputs: type=image,name=${{ matrix.package.image }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.package.name }}-${{ matrix.platform.llvm }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        package:
          - image: ghcr.io/randomairborne/experienced
            name: xpd-gateway
          - image: ghcr.io/randomairborne/experienced-cleanup
            name: xpd-cleanup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.package.name }}-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get docker tag
        id: get_tag
        run: ./ci/get-tag.sh
        shell: bash
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create --tag ${{ matrix.package.image }}:${{ steps.get_tag.outputs.tag }} --tag ${{ matrix.package.image }}:git-${{ github.sha }} $(printf '${{ matrix.package.image }}@sha256:%s ' *)

  deploy:
    needs: [merge]
    if: ${{ github.ref_name == 'prod' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ secrets.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ secrets.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: -n experienced set image statefulset/experienced-gateway experienced-gateway=ghcr.io/randomairborne/experienced:git-${{ github.sha }}
